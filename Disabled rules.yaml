The rules below have been disabled for now as they were creating alerts we have to further refine them and work on it.
    - rule: K8s Serviceaccount Created
      desc: Detect any attempt to create a service account
      condition: (kactivity and kcreate and serviceaccount and response_successful)
      output: K8s Serviceaccount Created (user=%ka.user.name serviceaccount=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)
      priority: INFO
      source: k8s_audit
      tags: [k8s]

    # Detect creating a service account in the kube-system/kube-public namespace
    - rule: Service Account Created in Kube Namespace
      desc: Detect any attempt to create a serviceaccount in the kube-system or kube-public namespaces
      condition: kevt and serviceaccount and kcreate and ka.target.namespace in (kube-system, kube-public) and response_successful and not trusted_sa
      output: Service account created in kube namespace (user=%ka.user.name serviceaccount=%ka.target.name resource=%ka.target.resource ns=%ka.target.namespace)
      priority: WARNING
      source: k8s_audit
      tags: [k8s]
      enabled: false
    

    - rule: K8s Secret Get Successfully
      desc: >
        Detect any attempt to get a secret. Service account tokens are excluded.
      condition: >
        secret and kget
        and kactivity
        and response_successful
      output: K8s Secret Get Successfully (user=%ka.user.name secret=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)
      priority: ERROR
      source: k8s_audit
      tags: [k8s]
      enabled: false


      # - rule: Run Instances
        #desc: Detect launching of a specified number of instances.
        #condition:
        # ct.name="RunInstances" and not ct.error exists
        #output:
        #A number of instances have been launched.
        #(requesting user=%ct.user,
        #requesting IP=%ct.srcip,
        #AWS region=%ct.region,
        #availability zone=%ct.request.availabilityzone,
        #subnet id=%ct.response.subnetid,
        #reservation id=%ct.response.reservationid)
        #priority: WARNING
        #tags:
        #- cloud
        #- aws
        #- aws_ec2
        #source: aws_cloudtrail
        
        
        
        





Discussed removed:	
    - rule: All Cloudtrail Events
      desc: Match all cloudtrail events.
      condition:
        evt.num > 0
      output: Some Cloudtrail Event (evtnum=%evt.num info=%evt.plugininfo ts=%evt.time.iso8601 id=%ct.id error=%ct.error)
      priority: DEBUG
      tags:
      - cloud
      - aws
      source: aws_cloudtrail
      enabled: false
      
      
    # - rule: ECS Task Run or Started
    #   desc: Detect a new task is started in ECS.
    #   condition:
    #     ct.src="ecs.amazonaws.com" and
    #     (ct.name="RunTask" or ct.name="StartTask") and
    #     not ct.error exists
    #   output:
    #     A new task has been started in ECS
    #     (requesting user=%ct.user,
    #     requesting IP=%ct.srcip,
    #     AWS region=%ct.region,
    #     cluster=%ct.request.cluster,
    #     task definition=%ct.request.taskdefinition)
    #   priority: WARNING
    #   tags:
    #     - cloud
    #     - aws
    #     - aws_ecs
    #     - aws_fargate
    #   source: aws_cloudtrail

        #- rule: List Buckets
      #desc: Detect listing of all S3 buckets.
        # condition:
        #ct.name="ListBuckets" and not ct.error exists
        # output:
        #A list of all S3 buckets has been requested.
        #(requesting user=%ct.user,
        #requesting IP=%ct.srcip,
        # AWS region=%ct.region,
        #host=%ct.request.host)
        #priority: WARNING
        # enabled: false
        #tags:
        # - cloud
          #- aws
          #- aws_s3
          #source: aws_cloudtrail

  


    - rule: K8s Serviceaccount Created
      desc: Detect any attempt to create a service account
      condition: (kactivity and kcreate and serviceaccount and response_successful)
      output: K8s Serviceaccount Created (user=%ka.user.name serviceaccount=%ka.target.name ns=%ka.target.namespace resource=%ka.target.resource resp=%ka.response.code decision=%ka.auth.decision reason=%ka.auth.reason)
      priority: INFO
      source: k8s_audit
      tags: [k8s]
      enabled: false



